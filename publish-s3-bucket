#!/usr/bin/env bash
#
# Publish an S3 bucket containing the following from this repository:
#  - CloudFormation templates
#  - AMI assets.

set -o errexit
set -o nounset
set -o pipefail

show_help() {
    >&2 echo "Usage: publish-s3-bucket [-h]"
    >&2 echo ""
    >&2 echo "Publish an S3 bucket with the resources from this repository."
    >&2 echo "Must be run from the root of the xrd-eks repository."
}

# Parse the arguments
while [ $# -gt 0 ]; do
  case $1 in
    -h|--help )
      show_help
      exit 255
      ;;
    * )
      >&2 echo "Unknown option $1"
      show_help
      exit 1
      ;;
  esac
done

ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
BUCKET_NAME=${BUCKET_NAME:-"${ACCOUNT_ID}-xrd-quickstart"}
BUCKET_KEY_PREFIX=${BUCKET_KEY_PREFIX:-"xrd-eks/"}

AWS_REGION=${AWS_REGION:-$(aws configure get region)}

CF_DIR=cf-templates
AMI_ASSETS_DIR=ami_assets
SUBMODULES_DIR=submodules

create_bucket() {
    if [ "${AWS_REGION}" != "us-east-1" ]; then
        aws s3api head-bucket --bucket "${BUCKET_NAME}" >/dev/null 2>&1 || aws s3api create-bucket --bucket "${BUCKET_NAME}" --create-bucket-configuration "{ \"LocationConstraint\": \"${AWS_REGION}\" }"
    else
        aws s3api head-bucket --bucket "${BUCKET_NAME}" >/dev/null 2>&1 || aws s3api create-bucket --bucket "${BUCKET_NAME}"
    fi

    POLICY='{
        "Version": "2012-10-17",
        "Statement": [
            {
                "Effect": "Allow",
                "Principal": "*",
                "Action": "s3:GetObject",
                "Resource": "arn:aws:s3:::'"${BUCKET_NAME}"'/'"${BUCKET_KEY_PREFIX}"''"${CF_DIR}"'/*"
            },
            {
                "Effect": "Allow",
                "Principal": "*",
                "Action": "s3:GetObject",
                "Resource": "arn:aws:s3:::'"${BUCKET_NAME}"'/'"${BUCKET_KEY_PREFIX}"''"${AMI_ASSETS_DIR}"'/*"
            }
        ]
    }'

    aws s3api put-public-access-block --bucket "${BUCKET_NAME}" --public-access-block-configuration "BlockPublicPolicy=false"
    aws s3api put-bucket-policy --bucket "${BUCKET_NAME}" --policy "${POLICY}"
}

sync_dir() {
    local DIR=$1
    aws s3 sync --delete "./${DIR}/" "s3://${BUCKET_NAME}/${BUCKET_KEY_PREFIX}${DIR}/"
}

echo "Checking git submodules are recursively checked out..."
git submodule status --recursive 2>/dev/null | while IFS= read -r LINE; do
    if [ "${LINE:0:1}" = "-" ]; then
        2>&1 echo "Submodules are not recursively checked out."
        2>&1 echo "Run 'git submodule update --init --recursive' and try again."
        exit 1
    fi
done

echo "Creating bucket ${BUCKET_NAME}..."
create_bucket

echo "Syncing CF templates to bucket..."
sync_dir ${CF_DIR}

echo "Syncing AMI assets to bucket..."
sync_dir ${AMI_ASSETS_DIR}

echo "Syncing submodules to bucket..."
sync_dir ${SUBMODULES_DIR}

echo "Syncing QuickStart packages to bucket..."
aws s3 sync --delete --metadata-directive REPLACE \
    "s3://aws-quickstart-${AWS_REGION}/quickstart-amazon-eks/functions/packages" \
    "s3://${BUCKET_NAME}/${BUCKET_KEY_PREFIX}submodules/quickstart-amazon-eks/functions/packages"

# Output the details to be used in the CF stacks.
echo ""
echo "Successfully populated S3 bucket"
echo "Use the following values in your XRd CloudFormation stack:"
echo "  XRd resource S3 bucket name: ${BUCKET_NAME}"
echo "  XRd resource S3 bucket region: ${AWS_REGION}"
echo "  XRd resource S3 bucket key prefix: ${BUCKET_KEY_PREFIX}"
